sequenceDiagram
    autonumber
    actor U as User
    participant UI as UI
    participant R as Reducer (comments)
    participant L as Listener (comments)
    participant O as Outbox (slice)
    participant G as Gateway (API)
    participant S as Snapshot Store

    U->>UI: Submit draft (content)
    UI->>R: dispatch commentCreateOptimisticApplied(tempId, content)
    R-->>UI: state: comment[tempId]{pending=true}
    UI->>O: dispatch commentCreateEnqueued(cmd: Create(tempId, content))
    O->>O: squash par tempId (garder dernière intention)
    UI->>L: (écoute) commentCreateEnqueued

    rect rgb(245,245,245)
        L->>G: create(draft from tempId)
        alt Happy path
            G-->>L: 201 Created (serverId, payload)
            L->>O: dequeue(cmd)
            L->>R: commentCreateSucceeded(tempId→serverId, payload)
            R-->>UI: state: pending=false, id=serverId
        else Tricky (retryable)
            G-->>L: error (network/5xx)
            L->>O: attempts+=1, lastError=...
            Note over O: Command reste en queue (backoff/jitter)
        else Tricky (non-retryable)
            G-->>L: error (4xx définitive)
            L->>O: dequeue(cmd)
            L->>R: commentCreateFailed(tempId, err) + revertOptimistic(tempId)
        end
    end

    par Snapshot
        UI->>S: save(commandId → {threadState, draft})
    and Revert aid
        L->>S: read(commandId) si besoin pour revert
    end
